VoltSpot 1.0 - Information Manual
--------------------------------

CONTENTS
--------
	1) License
	2) Installation
	3) Source code of VoltSpot
	4) Contact (E-mailing list)

LICENSE
-------

LICENSE TERMS

Copyright (c)2014. All rights reserved.

Permission is hereby granted, without written agreement and without license or
royalty fees, to use, copy, modify, and distribute this software and its
documentation for any purpose, provided that the above copyright notice and the
following four paragraphs appear in all copies of this software, whether in
binary form or not.

IN NO EVENT SHALL THE AUTHORS, THE UNIVERSITY OF VIRGINIA, OR THE STATE OF
VIRGINIA BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR
CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS
DOCUMENTATION, EVEN IF THEY HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH
DAMAGE.

THE AUTHORS, THE UNIVERSITY OF VIRGINIA, AND THE STATE OF VIRGINIA SPECIFICALLY
DISCLAIM ANY WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE PROVIDED
HEREUNDER IS ON AN "AS IS" BASIS, AND THE AUTHORS HAVE NO OBLIGATION TO PROVIDE
MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.

NEITHER THE NAME OF ANY VIRGINIA ENTITY NOR THE NAMES OF THE CONTRIBUTORS MAY
BE USED TO ENDORSE OR PROMOTE PRODUCTS DERIVED FROM THIS SOFTWARE WITHOUT
SPECIFIC PRIOR WRITTEN PERMISSION.

If you use this software or a modified version of it, please cite the following
paper: 

R. Zhang, K. Wang, B. H. Meyer, M. R. Stan and K. Skadron 
"Architecture Implications of Pads as a Scarce Resource" In Proceedings of
the 41th International Symposium on Computer Architecture, June 2014

INSTALLATION
------------
0. Prerequisite 

    VoltSpot relies on SuperLU, an open-source library to solve the large 
    and sparse linear system representing power delivery network. 
    It is required to install SuperLU before building VoltSpot.
    The source code can be downloaded here:
    http://crd-legacy.lbl.gov/~xiaoye/SuperLU/superlu_4.3.tar.gz
    Before compiling SuperLU, please replace make.inc with the configuration 
    file that matches your platform (e.g. cp ./MAKE_INC/make.linux ./make.inc).
    Also, please modify parameter SuperLUroot in the updated make.inc file.

    Both SuperLU and VoltSpot require BLAS (Basic Linear Algebra Subprograms) 
    library. If libblas is not installed, here is a quick guide on how to
    build one: http://www.giammy.com/phd/blas-lapack-howto.html

1. Build VoltSpot 

    a) Download the VoltSpot tar ball (VoltSpot-1.0.tar.gz) following the
       instructions at http://lava.cs.virginia.edu/VoltSpot
    
    b) Unzip the file using the following commands
       >> tar -xvf VoltSpot-1.0.tar.gz
    
    c) Go to the VoltSpot installation directory
       >> cd VoltSpot-1.0/
        
    d) Build VoltSpot
       i)  Modify Makefile parameter to locate your own build of SuperLU:
           SuperLUroot=/path/to/your/build/SuperLU_4.3
    	 ii) Under Linux/UNIX systems with GNU Make and GCC, compile source code.
           >> make
  	
    e) To remove all the outputs of compilation, type 'make clean'.
       Similarly, to remove the object files alone, type 'make cleano'.
       To view the list of files VoltSpot needs for proper build, type 
       'make filelist'. To compile for debugging, use 'make DEBUG=1'. 
       To compile for using with a profiler (e.g. gprof), use 'make DEBUG=2'.

SOURCE CODE OF VOLTSPOT
-------------

VoltSpot source code has the following files:

0. Makefile - for building VoltSpot

1. voltspot.c, voltspot.h - top level module.
   - Parse cmd line, parse flp file, allocate model data structure,
     read power file, pass power trace to PDN simulation/analysis module,
     output results, release memory.

2. PDN_sim.h and PDN_sim.c - the core voltage/current model module. 
	 - Construct matrices describing the modling circuit, solve the static 
     equations with direct LU decomposition or transient ODEs with implicit 
     trapezoidal numerical method (plus direct LU decomposition).
	 - Main functions: PDN_steady_SLU(...) and compute_PDN_SLU(...)

3. PDN_analyze.h and PDN_analyze.c - the results analysis module. 
	 - Analyse PDN's current/voltage status
	 - Main functions: PDN_steady_analyze(...) and PDN_trans_analyze(...)

4. pad.h and pad.c - for C4 pads manipulation
	 - Parse/dump pad location specification files. Process geometric info.

5. flp.h and flp.c  - the floorplanning module. 
	 - Read the floorplan description of the processor from a file
	   (example.flp) and provide the area and adjacency information required by
	   PDN_sim.c through function calls. 

6. util.h and util.c - miscellaneous utilities for printing error messages,
finding max of two numbers, array construction/destruction etc.

CONTACT (E-MAILING LIST)
------------------------

VoltSpot can be downloaded following the instructions at
http://lava.cs.virginia.edu/VoltSpot. In order to exchange comments, questions
and answers amidst the users of VoltSpot, we have created an joint e-mailing list
with HotSpot community. We will try to monitor this list and respond to questions 
as quickly as possible. One can subscribe to this list by visiting
http://www.cs.virginia.edu/mailman/listinfo/hotspot . This list is archived and
messages can be sent to it by e-mailing 'hotspot at cs dot virginia dot edu' 
